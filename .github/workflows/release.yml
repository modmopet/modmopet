name: Release
on:
  push:
    branches:
    - main
    - rc
    - beta
    - nightly
    - hotfix
    - "*.x"

env:
  FLUTTER_VERSION: '3.10.x'

permissions:
  contents: write

jobs:
  get-version:
    uses: shiipou/github-actions/.github/workflows/get-version.yml@main
    with:
      prerelease-branches: '^(rc|beta|nightly|hotfix)$'
  get-build:
    uses: shiipou/github-actions/.github/workflows/increment-variable.yml@main
    with:
      variable-name: build_number
    secrets:
      token: ${{ secrets.GH_TOKEN_WRITE_VARIABLES }}
  build:
    name: build-${{ matrix.platform }}
    needs: [get-version, get-build]
    if: ${{ needs.get-version.outputs.will-release }}
    uses: shiipou/github-actions/.github/workflows/build-flutter.yml@main
    strategy:
      matrix:
        platform: [ windows, linux, macos ]
        include:
          - platform: linux
            targets: zip,deb,rpm,appimage
            runner: ubuntu-latest
            artifacts: dist/*/*
          - platform: windows
            targets: zip,exe,msix
            runner: windows-latest
            artifacts: dist/*/*
          - platform: macos
            targets: zip,dmg
            runner: macos-latest
            artifacts: dist/*/*
    with:
      package-name: ModMopet
      version: ${{ needs.get-version.outputs.version }}
      build: ${{ needs.get-build.outputs.value }}
      platform: ${{ matrix.platform }}
      targets: ${{ matrix.targets }}
      runner: ${{ matrix.runner }}
      artifacts: ${{ matrix.artifacts }}

  artifact-paths:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.get-version.outputs.will-release }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/
      - name: list artifacts
        run: |
          ls -lia artifacts/*/*/
      
  release:
    needs: [get-version, build, artifact-paths]
    uses: shiipou/github-actions/.github/workflows/release.yml@main
    if: ${{ needs.get-version.outputs.will-release }}
    with:
      version:  ${{ needs.get-version.outputs.version }}
      changelogs: ${{ needs.get-version.outputs.changelogs }}
      is-prerelease: ${{ needs.get-version.outputs.is-prerelease == 'true' }}
      download-artifacts: true
